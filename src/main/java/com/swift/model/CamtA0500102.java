/*
 * Tracker API V1
 * Move your app forward with the gpi API
 *
 */




package com.swift.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Generated by SWIFT Standards 2017-03-22 00:13:52
 */
@ApiModel(description = "Generated by SWIFT Standards 2017-03-22 00:13:52")
public class CamtA0500102 {
  @SerializedName("get_invalid_events_request")
  private GetInvalidEventsRequest getInvalidEventsRequest = null;

  public CamtA0500102 getInvalidEventsRequest(GetInvalidEventsRequest getInvalidEventsRequest) {
    this.getInvalidEventsRequest = getInvalidEventsRequest;
    return this;
  }

   /**
   * Get getInvalidEventsRequest
   * @return getInvalidEventsRequest
  **/
  @ApiModelProperty(value = "")
  public GetInvalidEventsRequest getGetInvalidEventsRequest() {
    return getInvalidEventsRequest;
  }

  public void setGetInvalidEventsRequest(GetInvalidEventsRequest getInvalidEventsRequest) {
    this.getInvalidEventsRequest = getInvalidEventsRequest;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CamtA0500102 camtA0500102 = (CamtA0500102) o;
    return Objects.equals(this.getInvalidEventsRequest, camtA0500102.getInvalidEventsRequest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getInvalidEventsRequest);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CamtA0500102 {\n");
    
    sb.append("    getInvalidEventsRequest: ").append(toIndentedString(getInvalidEventsRequest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

